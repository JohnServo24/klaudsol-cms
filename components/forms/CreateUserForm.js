import { getSessionCache } from "@klaudsol/commons/lib/Session";

import { useFormikContext, Form } from "formik";
import { AUTO_PASSWORD, CUSTOM_PASSWORD, writeUsers } from "lib/Constants";
import AdminRenderer from "@/components/renderers/admin/AdminRenderer";
import { useContext, useEffect } from "react";
import { generateRandVals } from "@klaudsol/commons/lib/Math";
import CacheContext from "../contexts/CacheContext";
import { FaRandom } from "react-icons/fa";

export default function CreateUserForm({ passwordMode, setPasswordMode }) {
    const { setFieldValue, setTouched, values, errors, touched } = useFormikContext();
    const { capabilities } = useContext(CacheContext);

    const setRandomPassword = async () => {
        const randVal = await generateRandVals(5);

        setFieldValue('password', randVal);
        setFieldValue('confirmPassword', randVal);
        setFieldValue('forcePasswordChange', true);
    }

    useEffect(() => {
        const isEmptyPassword = !values.password && !values.changePassword;
        if (passwordMode === AUTO_PASSWORD && isEmptyPassword) setRandomPassword();
    }, [passwordMode]);

    const handlePasswordMode = async (e) => {
        const mode = e.target.value;

        if (mode === AUTO_PASSWORD) {
            const unTouched = {
                password: false,
                confirmPassword: false
            }

            setTouched(unTouched);
            await setRandomPassword();
        } else {
            setFieldValue('password', '');
            setFieldValue('confirmPassword', '');
            setFieldValue('forcePasswordChange', false);
        }

        setPasswordMode(e.target.value);
    }

    return (
        <>
            <h4>General info</h4>
            <div className="d-flex align-items-start gap-2">
                <div className="col">
                    <p className="general-input-title"> First Name </p>
                    <AdminRenderer
                        errors={errors}
                        touched={touched}
                        type="text"
                        name='firstName'
                        disabled={!capabilities.includes(writeUsers)}
                    />
                </div>
                <div className="col">
                    <p className="general-input-title"> Last Name </p>
                    <AdminRenderer
                        errors={errors}
                        touched={touched}
                        type="text"
                        name='lastName'
                        disabled={!capabilities.includes(writeUsers)}
                    />
                </div>
            </div>
            <div>
                <p className="general-input-title"> Email </p>
                <AdminRenderer
                    errors={errors}
                    touched={touched}
                    type="text"
                    name='email'
                    disabled={!capabilities.includes(writeUsers)}
                />
            </div>
            <div>
                <AdminRenderer
                    title="Login enabled"
                    errors={errors}
                    touched={touched}
                    type="checkbox"
                    name='loginEnabled'
                    disabled={!capabilities.includes(writeUsers)}
                />
            </div>
            <h4 className="mt-4">Password</h4>
            <div>
                <AdminRenderer
                    title="Autogenerated password"
                    errors={errors}
                    touched={touched}
                    type="radio"
                    name="passwordMode"
                    value={AUTO_PASSWORD}
                    checked={passwordMode === AUTO_PASSWORD}
                    onChange={handlePasswordMode}
                    disabled={!capabilities.includes(writeUsers)}
                />
            </div>
            <div>
                <AdminRenderer
                    title="Custom password"
                    errors={errors}
                    touched={touched}
                    type="radio"
                    name="passwordMode"
                    value={CUSTOM_PASSWORD}
                    checked={passwordMode === CUSTOM_PASSWORD}
                    onChange={handlePasswordMode}
                    disabled={!capabilities.includes(writeUsers)}
                />
            </div>
            {(passwordMode === AUTO_PASSWORD) &&
                <div className="mt-4">
                    <p className="general-input-title"> Autogenerated Password </p>
                    <AdminRenderer
                        errors={errors}
                        touched={touched}
                        type="password"
                        name="password"
                        readOnly={true}
                    />
                </div>
            }
            {(passwordMode === CUSTOM_PASSWORD) &&
                <>
                    <div className="mt-4">
                        <p className="general-input-title"> Password </p>
                        <AdminRenderer
                            errors={errors}
                            touched={touched}
                            type="password"
                            name="password"
                            disabled={!capabilities.includes(writeUsers) || passwordMode === AUTO_PASSWORD}
                        />
                    </div>
                    <div>
                        <p className="general-input-title"> Confirm Password </p>
                        <AdminRenderer
                            errors={errors}
                            touched={touched}
                            type="password"
                            name="confirmPassword"
                            disabled={!capabilities.includes(writeUsers) || passwordMode === AUTO_PASSWORD}
                        />
                    </div>
                </>
            }
            <div>
                <AdminRenderer
                    title="Force password change"
                    errors={errors}
                    touched={touched}
                    type="checkbox"
                    name="forcePasswordChange"
                    checked={values.forcePasswordChange}
                    disabled={!capabilities.includes(writeUsers)}
                />
            </div>
        </>
    );
}

export const getServerSideProps = getSessionCache();
